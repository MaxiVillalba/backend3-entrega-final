## Contiene el service como el deployment de la aplicación.
apiVersion: v1
kind: Service
metadata:
  name: be3shop-service
spec:
  selector:
    app: be3shop-service
  ports:
    - port: 80
      targetPort: 8000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: be3shop-service-deployment
  labels:
    app: be3shop-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: be3shop-service
  template:
    metadata:
      labels:
        app: be3shop-service
    spec:
      containers:
        - name: be3shop-service
          image: massevillalba/entregafinalbe3:latest
          ports:
            - containerPort: 8000
          env:
            - name: MONGO_URL
              value: mongodb://mongo-service:27017/be3shop # Asegúrate que 'mongo-service' sea el nombre del servicio de tu MongoDB en K8s
          imagePullPolicy: Always
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /health # Asegúrate de que tu app Node.js tenga este endpoint
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready # Asegúrate de que tu app Node.js tenga este endpoint
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
